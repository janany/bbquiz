define({"parameterView_capitalizeFirst":"capitalizeFirst(string)","parameterView_formatAsCurrency":"formatAsCurrency(number, stringCurrencyCode)","parameterView_pow":"pow(number, numberToPower)","parameterView_concat":"concat(string1, [string2, ..., stringN])","returnMessage_concat":"Evaluates to a string","returnMessage_abs":"Evaluates to a numeric","description_sum":"Combines a set of numeric inputs and return the value as a number.","returnMessage_pow":"Evaluates to a numeric","description_title":"Function:","parameterView_min":"min(number1, [number2, ..., numberN])","parameterView_sum":"sum(number1, [number2, ..., numberN])","parameterView_query":"query(selectionTable, booleanCondition, selectionReturnColumn)","returnMessage_exp":"Evaluates to a numeric","parameterView_lower":"lower(string)","parameterView_replace":"replace(stringReplaceIn, stringReplaceWhat, stringReplaceWith, [integerOccurancesToReplace])","returnMessage_median":"Evaluates to a numeric","returnMessage_toString":"Evaluates to a string","parameterView_toFloat":"toFloat(stringOrInteger)","description_startsWith":"Checks whether a string starts with a particular substring.","parameterView_title":"Parameter View:","parameterView_isNumber":"isNumber(string)","description_capitalizeFirst":"Capitalizes the first letter of the string.","description_sqrt":"Returns the rounded positive square root of the number.","returnMessage_lower":"Evaluates to a string","description_query":"Allows users to search through data tables and return select values.","description_find":"Returns the position/index of a substring within a string.","description_if":"Based on a condition, a true value is used or a false value is used.","returnMessage_max":"Evaluates to a numeric","parameterView_trim":"trim(string)","parameterView_max":"max(number1, [number2, ..., numberN])","description_ceil":"Converts a number with fraction to a next whole number.","returnMessage_toInteger":"Evaluates to a integer","parameterView_round":"round(fromNumber, integerPrecision)","description_substring":"Returns a part of the string from a larger string.","parameterView_toInteger":"toInteger(stringOrFloat)","description_round":"Returns the first numeric input rounded to the precision defined by the second numeric input.","description_exp":"Returns Euler's number e raised to the power of the numeric input.","returnMessage_len":"Evaluates to a integer","description_pow":"Returns the value of the first numeric input raised to the power of the second numeric input.","returnMessage_min":"Evaluates to a numeric","returnMessage_trim":"Evaluates to a string","parameterView_upper":"upper(string)","returnMessage_sumIf":"Evaluates to a numeric","description_contains":"Checks whether a string contains a particular substring.","returnMessage_round":"Evaluates to a numeric","description_mod":"Returns the remainder of the first numeric input divided by the second numeric input.","description_replace":"Returns a string with all* found occurrences replaced with the new string.  *The optional integer input defines the number of occurrences to replace starting from the beginning of the string.","description_toFloat":"Converts a string that represents a number or an integer into a float.","returnMessage_replace":"Evaluates to a string","description_upper":"Converts all of the characters in the input string to upper case.","description_toString":"Converts a numeric value into a string.","parameterView_mod":"mod(number, numberDivisor)","returnMessage_title":"Return:","returnMessage_formatAsCurrency":"Evaluates to a string","description_toInteger":"Converts a string that represents a number or a float into an integer.","parameterView_substring":"substring(string, integerStart, [integerEnd])","parameterView_contains":"contains(stringFindIn, stringFindWhat, booleanIgnoreCase)","returnMessage_avg":"Evaluates to a numeric","parameterView_avg":"avg(number1, [number2, ..., numberN])","description_max":"Returns the largest of the given numeric inputs.","parameterView_toString":"toString(numeric)","parameterView_median":"median(number1, [number2, ..., numberN])","returnMessage_avgIf":"Evaluates to a numeric","description_abs":"Returns the positive equivalent to the numeric input entered.","returnMessage_substring":"Evaluates to a string","returnMessage_find":"Evaluates to a integer","parameterView_if":"if(booleanCondition, trueValue, falseValue)","parameterView_len":"len(string)","parameterView_ceil":"ceil(number)","returnMessage_capitalizeFirst":"Evaluates to a string","description_median":"Evaluates the median of the given numeric inputs.","description_min":"Returns the smallest of the given numeric inputs.","returnMessage_endsWith":"Evaluates to a boolean","description_lower":"Converts all of the characters in the input string to lower case.","description_len":"Returns the length of a string.","parameterView_sqrt":"sqrt(number)","returnMessage_ceil":"Evaluates to a numeric","returnMessage_mod":"Evaluates to a numeric","parameterView_startsWith":"startswith(stringFindIn, stringStart)","returnMessage_upper":"Evaluates to a string","returnMessage_startsWith":"Evaluates to a boolean","parameterView_abs":"abs(number)","description_trim":"Removes white space from both ends of a string.","returnMessage_sum":"Evaluates to a numeric","returnMessage_query":"Evaluates to the column type","parameterView_sumIf":"sumIf(booleanCondition, number1)","description_sumIf":"Evaluates the sum  across all sub-documents of a given attribute based on the condition.  The condition will evaluate each sub-document independently.","description_concat":"Concatenates, or combines, strings.","returnMessage_contains":"Evaluates to a boolean","description_avg":"Calculates the average of a set of numeric inputs and return the value as a number.","description_avgIf":"Evaluates the average across all sub-documents of a given attribute based on the condition.  The condition will evaluate each sub-document independently.","description_formatAsCurrency":"Returns a float or integer in the correct currency format.","returnMessage_isNumber":"Evaluates to a boolean","description_endsWith":"Checks whether a string ends with a particular substring.","parameterView_find":"find(stringFindIn, stringFindWhat, [integerFrom, integerTo])","returnMessage_toFloat":"Evaluates to a float","parameterView_avgIf":"avgIf(booleanCondition, number1)","returnMessage_sqrt":"Evaluates to a numeric","parameterView_exp":"exp(number)","parameterView_endsWith":"endswith(stringFindIn, stringEnd)","description_isNumber":"Returns true when a string is a number and will return false in all other cases."});